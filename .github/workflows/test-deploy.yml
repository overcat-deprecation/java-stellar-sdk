name: "Test and Deploy"

on:
  push:
    branches: [ * ]
  #    branches: [ master ]
  pull_request:
  release:
    types:
      - created

env:
  JAVA_VERSION: '11'
  JAVA_DISTRIBUTION: 'microsoft'

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Set up JDK
          uses: actions/setup-java@v2
          with:
            java-version: ${{ env.JAVA_VERSION }}
            distribution: ${{ env.JAVA_DISTRIBUTION }}
        - name: Test
          run: ./gradlew check

    shadow_jar:
        needs: test
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Set up JDK
          uses: actions/setup-java@v2
          with:
            java-version: ${{ env.JAVA_VERSION }}
            distribution: ${{ env.JAVA_DISTRIBUTION }}
        - name: Test
          run: ./gradlew shadowJar
        - name: Persist JAR Artifact
          uses: actions/upload-artifact@v3
          with:
            name: output
            path: build/libs/stellar-sdk.jar
    
    deploy:
        needs: shadow_jar
#        if: github.event_name == 'release' && github.event.action == 'created'
        runs-on: ubuntu-latest
        steps:
            - name: Download JAR Artifact
              uses: actions/download-artifact@v2
              with:
                name: output
                path: output
            
#            - name: Upload JAR Artifact to GitHub Release
#              uses: softprops/action-gh-release@v1
#              with:
#                files: build/libs/stellar-sdk.jar
    
    publish_docs:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Set up JDK
          uses: actions/setup-java@v2
          with:
            java-version: ${{ env.JAVA_VERSION }}
            distribution: ${{ env.JAVA_DISTRIBUTION }}
        - name: Generate Docs
          run: javadoc -public -splitindex -windowtitle "java-stellar-sdk documentation" -d ./javadoc -sourcepath ./src/main/java/ -subpackages org.stellar.sdk -exclude org.stellar.sdk.xdr

